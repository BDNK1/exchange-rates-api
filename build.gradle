plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tranzzo'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    implementation "io.github.daggerok:liquibase-r2dbc-spring-boot-starter:3.1.3"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
    implementation "org.mapstruct:mapstruct:1.5.5.Final"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'io.github.benas:random-beans:3.9.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootBuildImage") {
    imageName = "tranzzo/exchange:${version}"
}

tasks.register('localRun', Exec) {
    it.dependsOn("bootBuildImage")
    commandLine "docker", "compose", "--profile", "local", "up"
}
